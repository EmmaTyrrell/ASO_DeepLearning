# import modules
import arcpy
import rasterio
import os
import numpy as np
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
import time

print("modules imported")

# establish paths
root = r"H:/Emma/ASOML/"
training = r"H:/Emma/ASOML/ASO_processed/training/SNM/"
snapRaster = r"H:/Emma/ASOML/data/SnapRaster_albn83_50m.tif"
years = list(range(2023, 2025))
goodList = []
for year in years:
    flaggedList = []
    deletesList = []
    arcpy.env.workspace = f"{training}{year}/"
    files = arcpy.ListFiles()
    for file in files:
        if file.endswith(".tif"):
            arcpy.env.snapRaster = snapRaster
            arcpy.env.cellSize = snapRaster
            arcpy.SplitRaster_management(file, f"{training}{year}/outSplits/", f"{file[:-4]}", "SIZE_OF_TILE",
                                         "TIFF", "NEAREST", "", "128 128", "30", "PIXELS")
            print("file done")

# get out of rasters that have no data values
    print("removing no data values and bad training data ... ")
    totalCount = (128 * 128)
    percThreshold = 1
   outSplits = f"{training}{year}/outSplits/"
    for file in os.listdir(outSplits):
        if not file.endswith("TIF"):
            intermed = os.path.join(outSplits, file)
            deletesList.append(intermed)
        else:
            raster_path = os.path.join(outSplits, file)
            with rasterio.open(raster_path) as src:
                data = src.read(1)
                nodata_mask = np.isnan(data)

                # Calculate NoData statistics
                nodata_count = np.sum(nodata_mask)
                # total_count = data.size
                # no_data_percent = (nodata_count / total_count) * 100
                # nodata_value = src.nodata
                # if nodata_value is not None:
                #     nodata_count = np.sum(data == nodata_value)
                # else:
                #     nodata_count = np.sum(np.isnan(data))
                no_data_percent = (nodata_count / totalCount) * 100
                max_value = data.max()
                if no_data_percent > percThreshold:
                    #print(no_data_percent)
                    flaggedList.append(raster_path)
                elif max_value <= 0:
                    #print("all zero file removed")
                    zeroList.append(raster_path)
                else:
                    goodList.append(raster_path)
                    #print(f"added to good list")
                # check to see if there is a difference  -- NEED TO ADD FOR FINAL CODE
    print(" ")
    print("list of data for training:")
    print(len(goodList))
    print("list of data for exclusion:")
    print(int(len(flaggedList) + len(zeroList)))
    for flag in flaggedList:
        if os.path.exists(flag):
            os.remove(flag)
    for delete in deletesList:
        if os.path.exists(delete):
            os.remove(delete)
    for zero in zeroList:
        if os.path.exists(zero):
            os.remove(zero)
    print("flagged files deleted")
    print(" ")
    print("list of data for training:")
    print(len(goodList))
    print("list of data for exclusion:")
    print(len(flaggedList))
    for flag in flaggedList:
        if os.path.exists(flag):
            os.remove(flag)
    for delete in deletesList:
        if os.path.exists(delete):
            os.remove(delete)
    print("flagged files deleted")
